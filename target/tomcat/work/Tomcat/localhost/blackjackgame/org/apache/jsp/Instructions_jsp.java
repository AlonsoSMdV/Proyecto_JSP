/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-20 07:19:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import connectionpool.ConnectionPool;
import players.PlayersService;
import players.Player;
import java.util.ArrayList;

public final class Instructions_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Instrucciones</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/estilo.css\">\r\n");
      out.write("    <!-- Enlace a Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("     <style>\r\n");
      out.write("        /* Estilos para los iconos */\r\n");
      out.write("        svg {\r\n");
      out.write("            fill: currentColor;\r\n");
      out.write("            width: 1em;\r\n");
      out.write("            height: 1em;\r\n");
      out.write("            vertical-align: -0.125em;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body{\r\n");
      out.write("          width: auto;\r\n");
      out.write("          background-size: cover;\r\n");
      out.write("          background-image: url(\"assets/img/BlackjackBack.jpg\");\r\n");
      out.write("          position: relative;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");

        //Usuario de la base de datos
        String dbuser = "juan";
        //Contraseña de la base de datos
        String dbpassword = "12345678";
        //Pool de conexiones a la base de datos
        ConnectionPool pool = new ConnectionPool("jdbc:mysql://localhost:3306/blackjack", dbuser, dbpassword);
        PlayersService playerSvc = new PlayersService(pool.getConnection());
        ArrayList<Player> players = playerSvc.requestAll("id ASC");
        Player player = (Player)session.getAttribute("player");
        if(player==null){
            response.sendRedirect("login.jsp");
        }
         else{
    
      out.write("\r\n");
      out.write("     <!-- Inicio del contenido HTML -->\r\n");
      out.write("\r\n");
      out.write("<div class=\"min-vh-100 d-flex flex-column\">\r\n");
      out.write("    <nav class=\" navbar navbar-expand-lg border-bottom border-white bg-dark\">\r\n");
      out.write("           <a class=\"navbar-brand\" href=\"#\">Usuario</a>\r\n");
      out.write("            <div class=\"collapse navbar-collapse justify-content-end\">\r\n");
      out.write("                <ul class=\"navbar-nav\">\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"my-profile.jsp\">");
 if(player!=null) out.print(player.getPlayername());
      out.write("</a>\r\n");
      out.write("                   </li>\r\n");
      out.write("               </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </nav>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"flex-grow-wrapper\">\r\n");
      out.write("        <div class=\"row mr-3 border-right border-white bg-dark\">\r\n");
      out.write("            <div class=\"offcanvas-body d-md-flex flex-column p-0 pt-lg-3 overflow-y-auto\">\r\n");
      out.write("          <ul class=\"nav flex-column\">\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link d-flex align-items-center gap-2 active ml-2\" aria-current=\"page\" href=\"home.jsp\">\r\n");
      out.write("                Inicio\r\n");
      out.write("              </a>\r\n");
      out.write("            </li>\r\n");
      out.write("          </ul>\r\n");
      out.write("          <hr class=\"my-3\">\r\n");
      out.write("          <ul class=\"nav flex-column mb-auto\">\r\n");
      out.write("            \r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link d-flex align-items-center ml-2\" href=\"Instructions.jsp\">\r\n");
      out.write("                Instrucciones\r\n");
      out.write("              </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link d-flex align-items-center gap-2 ml-2\" href=\"my-profile.jsp\">\r\n");
      out.write("                Mi perfil\r\n");
      out.write("              </a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("              <a class=\"nav-link d-flex align-items-center ml-2\" href=\"logout.jsp\">\r\n");
      out.write("                Cerrar sesión\r\n");
      out.write("              </a>\r\n");
      out.write("            </li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("          <div class=\"row w-auto h-auto\">\r\n");
      out.write("            <div class=\"p-2\" style=\"color: white; overflow-y: auto;\" > \r\n");
      out.write("                <h2 style=\"color: white;\">Instrucciones de juego</h2>\r\n");
      out.write("        \r\n");
      out.write("              \r\n");
      out.write("              <p class=\"fs-6\"><b>1 - Objetivo del juego:</b><br>\r\n");
      out.write("              El objetivo del blackjack es obtener una mano con un valor lo más cercano posible a 21 sin pasarse.<br> Si tu mano supera los 21 puntos, pierdes automáticamente.\r\n");
      out.write("\r\n");
      out.write("              <br><b>2-  Valores de las cartas:</b><br>\r\n");
      out.write("              Las cartas numéricas (2-7) tienen el valor de su número.<br>\r\n");
      out.write("              Las cartas de figuras (sota, caballo y rey) valen 8, 9 y 10 puntos cada una.<br>\r\n");
      out.write("              El As vale 1 punto.\r\n");
      out.write("\r\n");
      out.write("              <br><b>3 - Turnos:</b><br>\r\n");
      out.write("              El turno del jugador comienza y el jugador pedirá cartas hasta que decida plantarse ahi iniciara el turno de la CPU \r\n");
      out.write("              <br><b>4 - Ganar o perder:</b><br>\r\n");
      out.write("              Si la mano del jugador tiene un valor más alto que la del crupier y no supera los 21 puntos, el jugador gana.<br>\r\n");
      out.write("              Si la mano del crupier supera los 21 puntos o es menor que la del jugador, el jugador gana.<br>\r\n");
      out.write("              Si la mano del jugador supera los 21 puntos, el jugador pierde automáticamente, por lo que al no intervenir el crupier su puntos estaran en 0.<br>\r\n");
      out.write("              En caso de empate se considerara derrota</p>\r\n");
      out.write("              <div class=\"buttons\">\r\n");
      out.write("                <form method=\"post\" action=\"Game.jsp\" onsubmit=\"return comprobacionTokens();\">\r\n");
      out.write("                    <input type=\"hidden\" id=\"newGame\" name=\"newGame\" value=\"true\">\r\n");
      out.write("                    <button class=\"btn btn-outline-light\" type=\"submit\">Jugar</button>\r\n");
      out.write("                </form>\r\n");
      out.write("              </div>\r\n");
      out.write("                \r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("        \r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");

    }

      out.write("\r\n");
      out.write("    <!-- Bootstrap JavaScript y dependencias -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
