/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2024-05-20 07:20:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import connectionpool.ConnectionPool;
import players.PlayersService;
import players.Player;
import Cartas.*;
import java.util.ArrayList;

public final class playAgain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"es\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Blackjack</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/estilo.css\">\r\n");
      out.write("    <!-- Enlace a Bootstrap CSS -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            width: auto;\r\n");
      out.write("            background-size: cover;\r\n");
      out.write("            background-position: center;\r\n");
      out.write("            background-image: url(\"assets/img/BlackjackBack2.jpg\");\r\n");
      out.write("            position: relative;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .center {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            font-size: 24px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"center\">\r\n");
      out.write("            ");
 
                int ganador = 0;
                if(request.getParameter("winner") != null && request.getParameter("winner").length() > 0){
                    ganador = Integer.parseInt(request.getParameter("winner"));
                }
                
                int VJugador = 0;
                if(request.getParameter("valorJugador") != null && request.getParameter("valorJugador").length() > 0){
                    VJugador = Integer.parseInt(request.getParameter("valorJugador"));
                }

                int VCPU = 0;
                if(request.getParameter("valorCPU") != null && request.getParameter("valorCPU").length() > 0){
                    VCPU = Integer.parseInt(request.getParameter("valorCPU"));
                }

                String mensaje = "";
                if(ganador == 1){
                    mensaje = "Enhorabuena!!! Has ganado<br>Puntuación crupier = " + VCPU + "<br>Tu puntuación = " + VJugador;
                } else if(ganador == 2){
                    mensaje = "Lo siento, has perdido la partida.<br>Puntuación crupier = " + VCPU + "<br>Tu puntuación = " + VJugador;
                } else if(ganador == 3){
                    mensaje = "Has empatado<br>Puntuación crupier = " + VCPU + "<br>Tu puntuación = " + VJugador;
                }

                out.println(mensaje);
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"buttons \">\r\n");
      out.write("            <form method=\"post\" action=\"home.jsp\" >\r\n");
      out.write("                <button class=\"btn btn-light mr-2\" type=\"submit\">Volver al inicio</button>\r\n");
      out.write("            </form>\r\n");
      out.write("            <form method=\"post\" action=\"Game.jsp\" onsubmit=\"return comprobacionTokens();\">\r\n");
      out.write("                <input type=\"hidden\" id=\"newGame\" name=\"newGame\" value=\"true\">\r\n");
      out.write("                <button class=\"btn btn-dark\" type=\"submit\">Jugar de nuevo</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap JavaScript y dependencias -->\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
